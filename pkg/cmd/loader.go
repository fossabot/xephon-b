package cmd

import (
	"fmt"
	"os"

	"github.com/spf13/cobra"
)

// flags to bind
var (
	loadSourceLocation string
	loadDataType       string
	targetType         string
	targetLocation     string
)

var LoaderCmd = &cobra.Command{
	Use:   "loader",
	Short: "loader load generated data to tsdb",
	Long:  "loader load data generated by simulator into time series databases",
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Println("lock and load")
		if loadSourceLocation == "" {
			// TODO: actually we can provide generating load on the fly ....
			log.Fatal("must provide source data location")
			return
		}
		// open the file to obtain io.Reader
		// TODO: should check file exists, os.Create will create file if not exists
		f, err := os.Create(loadSourceLocation)
		if err != nil {
			log.Error("can't read source file")
			log.Fatal(err.Error())
			return
		}
		defer f.Close()
	},
}

func init() {
	LoaderCmd.Flags().StringVar(&loadSourceLocation, "src", "", "location of data file")
	LoaderCmd.Flags().StringVar(&loadDataType, "data-type", "int", "data point type, int or double")
	LoaderCmd.Flags().StringVar(&targetType, "target-type", "void", "target database")
	LoaderCmd.Flags().StringVar(&targetLocation, "target-location", "localhost:10086", "target url")
}
